/**
* Systems Modeling API and Services
* REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
*
* The version of the OpenAPI document: 1.0
*
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
@file:UseSerializers(UUIDSerializer::class)

package org.openmbee.flexo.sysmlv2.models

import org.openmbee.flexo.sysmlv2.infrastructure.UUIDSerializer
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers

import org.openmbee.flexo.sysmlv2.models.ActionDefinitionRequestAnyOfDeclaredShortName
import org.openmbee.flexo.sysmlv2.models.ActionDefinitionRequestAnyOfIsConjugated
import org.openmbee.flexo.sysmlv2.models.ActionUsageRequest
import org.openmbee.flexo.sysmlv2.models.ActionUsageRequestAnyOfMultiplicity
import org.openmbee.flexo.sysmlv2.models.AssertConstraintUsageRequestAnyOfDirection
import org.openmbee.flexo.sysmlv2.models.AssertConstraintUsageRequestAnyOfPortionKind
import org.openmbee.flexo.sysmlv2.models.ExpressionRequest
import org.openmbee.flexo.sysmlv2.models.Identified
import org.openmbee.flexo.sysmlv2.models.ItemFlowRequest
import org.openmbee.flexo.sysmlv2.models.StepRequestAnyOf
import org.openmbee.flexo.sysmlv2.models.TriggerKindRequest

/**
 *
 * @param atType
 * @param atId
 * @param aliasIds
 * @param behavior
 * @param chainingFeature
 * @param declaredName
 * @param declaredShortName
 * @param differencingType
 * @param directedFeature
 * @param direction
 * @param documentation
 * @param elementId
 * @param endFeature
 * @param endOwningType
 * @param feature
 * @param featureMembership
 * @param featureTarget
 * @param featuringType
 * @param importedMembership
 * @param inheritedFeature
 * @param inheritedMembership
 * @param input
 * @param intersectingType
 * @param isAbstract
 * @param isComposite
 * @param isConjugated
 * @param isDerived
 * @param isEnd
 * @param isImpliedIncluded
 * @param isLibraryElement
 * @param isOrdered
 * @param isPortion
 * @param isReadOnly
 * @param isSufficient
 * @param isUnique
 * @param member
 * @param membership
 * @param multiplicity
 * @param name
 * @param output
 * @param ownedAnnotation
 * @param ownedConjugator
 * @param ownedDifferencing
 * @param ownedDisjoining
 * @param ownedElement
 * @param ownedEndFeature
 * @param ownedFeature
 * @param ownedFeatureChaining
 * @param ownedFeatureInverting
 * @param ownedFeatureMembership
 * @param ownedImport
 * @param ownedIntersecting
 * @param ownedMember
 * @param ownedMembership
 * @param ownedRedefinition
 * @param ownedReferenceSubsetting
 * @param ownedRelationship
 * @param ownedSpecialization
 * @param ownedSubsetting
 * @param ownedTypeFeaturing
 * @param ownedTyping
 * @param ownedUnioning
 * @param owner
 * @param owningFeatureMembership
 * @param owningMembership
 * @param owningNamespace
 * @param owningRelationship
 * @param owningType
 * @param parameter
 * @param qualifiedName
 * @param shortName
 * @param textualRepresentation
 * @param type
 * @param unioningType
 * @param association
 * @param connectorEnd
 * @param interaction
 * @param isImplied
 * @param itemFeature
 * @param itemFlowEnd
 * @param itemType
 * @param ownedRelatedElement
 * @param owningRelatedElement
 * @param relatedElement
 * @param relatedFeature
 * @param source
 * @param sourceFeature
 * @param sourceOutputFeature
 * @param target
 * @param targetFeature
 * @param targetInputFeature
 * @param effectStep
 * @param guardExpression
 * @param transitionStep
 * @param triggerStep
 * @param actionDefinition
 * @param connectionDefinition
 * @param definition
 * @param directedUsage
 * @param flowConnectionDefinition
 * @param individualDefinition
 * @param isIndividual
 * @param isReference
 * @param isVariation
 * @param itemDefinition
 * @param nestedAction
 * @param nestedAllocation
 * @param nestedAnalysisCase
 * @param nestedAttribute
 * @param nestedCalculation
 * @param nestedCase
 * @param nestedConcern
 * @param nestedConnection
 * @param nestedConstraint
 * @param nestedEnumeration
 * @param nestedFlow
 * @param nestedInterface
 * @param nestedItem
 * @param nestedMetadata
 * @param nestedOccurrence
 * @param nestedPart
 * @param nestedPort
 * @param nestedReference
 * @param nestedRendering
 * @param nestedRequirement
 * @param nestedState
 * @param nestedTransition
 * @param nestedUsage
 * @param nestedUseCase
 * @param nestedVerificationCase
 * @param nestedView
 * @param nestedViewpoint
 * @param occurrenceDefinition
 * @param owningDefinition
 * @param owningUsage
 * @param partDefinition
 * @param portionKind
 * @param usage
 * @param variant
 * @param variantMembership
 * @param function
 * @param isModelLevelEvaluable
 * @param result
 * @param referencedElement
 * @param referent
 * @param `value`
 * @param argument
 * @param `operator`
 * @param kind
 * @param predicate
 * @param isNegated
 * @param assertedConstraint
 * @param constraintDefinition
 * @param actorParameter
 * @param assumedConstraint
 * @param framedConcern
 * @param reqId
 * @param requiredConstraint
 * @param requirementDefinition
 * @param satisfiedRequirement
 * @param satisfyingFeature
 * @param stakeholderParameter
 * @param subjectParameter
 * @param text
 * @param concernDefinition
 * @param viewpointDefinition
 * @param viewpointStakeholder
 * @param calculationDefinition
 * @param caseDefinition
 * @param objectiveRequirement
 * @param verificationCaseDefinition
 * @param verifiedRequirement
 * @param includedUseCase
 * @param useCaseDefinition
 * @param eventOccurrence
 * @param performedAction
 * @param useCaseIncluded
 * @param analysisCaseDefinition
 * @param resultExpression
 * @param effectAction
 * @param succession
 * @param triggerAction
 * @param doAction
 * @param entryAction
 * @param exitAction
 * @param isParallel
 * @param stateDefinition
 * @param exhibitedState
 * @param bodyAction
 * @param untilArgument
 * @param whileArgument
 * @param loopVariable
 * @param seqArgument
 * @param payloadArgument
 * @param receiverArgument
 * @param senderArgument
 * @param payloadParameter
 * @param elseAction
 * @param ifArgument
 * @param thenAction
 * @param targetArgument
 * @param valueExpression
 */
@Serializable
data class StepRequest(
    @SerialName("@type")
    val atType: StepRequest.AtType,
    @SerialName("@id")
    val atId: java.util.UUID? = null,
    val aliasIds: kotlin.collections.List<kotlin.String>? = null,
    val behavior: kotlin.collections.List<Identified>? = null,
    val chainingFeature: kotlin.collections.List<Identified>? = null,
    val declaredName: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val declaredShortName: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val differencingType: kotlin.collections.List<Identified>? = null,
    val directedFeature: kotlin.collections.List<Identified>? = null,
    val direction: AssertConstraintUsageRequestAnyOfDirection? = null,
    val documentation: kotlin.collections.List<Identified>? = null,
    val elementId: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val endFeature: kotlin.collections.List<Identified>? = null,
    val endOwningType: ActionUsageRequestAnyOfMultiplicity? = null,
    val feature: kotlin.collections.List<Identified>? = null,
    val featureMembership: kotlin.collections.List<Identified>? = null,
    val featureTarget: Identified? = null,
    val featuringType: kotlin.collections.List<Identified>? = null,
    val importedMembership: kotlin.collections.List<Identified>? = null,
    val inheritedFeature: kotlin.collections.List<Identified>? = null,
    val inheritedMembership: kotlin.collections.List<Identified>? = null,
    val input: kotlin.collections.List<Identified>? = null,
    val intersectingType: kotlin.collections.List<Identified>? = null,
    val isAbstract: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isComposite: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isConjugated: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isDerived: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isEnd: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isImpliedIncluded: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isLibraryElement: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isOrdered: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isPortion: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isReadOnly: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isSufficient: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isUnique: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val member: kotlin.collections.List<Identified>? = null,
    val membership: kotlin.collections.List<Identified>? = null,
    val multiplicity: ActionUsageRequestAnyOfMultiplicity? = null,
    val name: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val output: kotlin.collections.List<Identified>? = null,
    val ownedAnnotation: kotlin.collections.List<Identified>? = null,
    val ownedConjugator: ActionUsageRequestAnyOfMultiplicity? = null,
    val ownedDifferencing: kotlin.collections.List<Identified>? = null,
    val ownedDisjoining: kotlin.collections.List<Identified>? = null,
    val ownedElement: kotlin.collections.List<Identified>? = null,
    val ownedEndFeature: kotlin.collections.List<Identified>? = null,
    val ownedFeature: kotlin.collections.List<Identified>? = null,
    val ownedFeatureChaining: kotlin.collections.List<Identified>? = null,
    val ownedFeatureInverting: kotlin.collections.List<Identified>? = null,
    val ownedFeatureMembership: kotlin.collections.List<Identified>? = null,
    val ownedImport: kotlin.collections.List<Identified>? = null,
    val ownedIntersecting: kotlin.collections.List<Identified>? = null,
    val ownedMember: kotlin.collections.List<Identified>? = null,
    val ownedMembership: kotlin.collections.List<Identified>? = null,
    val ownedRedefinition: kotlin.collections.List<Identified>? = null,
    val ownedReferenceSubsetting: ActionUsageRequestAnyOfMultiplicity? = null,
    val ownedRelationship: kotlin.collections.List<Identified>? = null,
    val ownedSpecialization: kotlin.collections.List<Identified>? = null,
    val ownedSubsetting: kotlin.collections.List<Identified>? = null,
    val ownedTypeFeaturing: kotlin.collections.List<Identified>? = null,
    val ownedTyping: kotlin.collections.List<Identified>? = null,
    val ownedUnioning: kotlin.collections.List<Identified>? = null,
    val owner: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningFeatureMembership: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningMembership: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningNamespace: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningRelationship: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningType: ActionUsageRequestAnyOfMultiplicity? = null,
    val parameter: kotlin.collections.List<Identified>? = null,
    val qualifiedName: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val shortName: ActionDefinitionRequestAnyOfDeclaredShortName? = null,
    val textualRepresentation: kotlin.collections.List<Identified>? = null,
    val type: kotlin.collections.List<Identified>? = null,
    val unioningType: kotlin.collections.List<Identified>? = null,
    val association: kotlin.collections.List<Identified>? = null,
    val connectorEnd: kotlin.collections.List<Identified>? = null,
    val interaction: kotlin.collections.List<Identified>? = null,
    val isImplied: kotlin.Boolean? = null,
    val itemFeature: Identified? = null,
    val itemFlowEnd: kotlin.collections.List<Identified>? = null,
    val itemType: kotlin.collections.List<Identified>? = null,
    val ownedRelatedElement: kotlin.collections.List<Identified>? = null,
    val owningRelatedElement: Identified? = null,
    val relatedElement: kotlin.collections.List<Identified>? = null,
    val relatedFeature: kotlin.collections.List<Identified>? = null,
    val source: Identified? = null,
    val sourceFeature: Identified? = null,
    val sourceOutputFeature: Identified? = null,
    val target: Identified? = null,
    val targetFeature: kotlin.collections.List<Identified>? = null,
    val targetInputFeature: Identified? = null,
    val effectStep: kotlin.collections.List<Identified>? = null,
    val guardExpression: kotlin.collections.List<Identified>? = null,
    val transitionStep: Identified? = null,
    val triggerStep: kotlin.collections.List<Identified>? = null,
    val actionDefinition: kotlin.collections.List<Identified>? = null,
    val connectionDefinition: kotlin.collections.List<Identified>? = null,
    val definition: kotlin.collections.List<Identified>? = null,
    val directedUsage: kotlin.collections.List<Identified>? = null,
    val flowConnectionDefinition: kotlin.collections.List<Identified>? = null,
    val individualDefinition: ActionUsageRequestAnyOfMultiplicity? = null,
    val isIndividual: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isReference: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isVariation: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val itemDefinition: kotlin.collections.List<Identified>? = null,
    val nestedAction: kotlin.collections.List<Identified>? = null,
    val nestedAllocation: kotlin.collections.List<Identified>? = null,
    val nestedAnalysisCase: kotlin.collections.List<Identified>? = null,
    val nestedAttribute: kotlin.collections.List<Identified>? = null,
    val nestedCalculation: kotlin.collections.List<Identified>? = null,
    val nestedCase: kotlin.collections.List<Identified>? = null,
    val nestedConcern: kotlin.collections.List<Identified>? = null,
    val nestedConnection: kotlin.collections.List<Identified>? = null,
    val nestedConstraint: kotlin.collections.List<Identified>? = null,
    val nestedEnumeration: kotlin.collections.List<Identified>? = null,
    val nestedFlow: kotlin.collections.List<Identified>? = null,
    val nestedInterface: kotlin.collections.List<Identified>? = null,
    val nestedItem: kotlin.collections.List<Identified>? = null,
    val nestedMetadata: kotlin.collections.List<Identified>? = null,
    val nestedOccurrence: kotlin.collections.List<Identified>? = null,
    val nestedPart: kotlin.collections.List<Identified>? = null,
    val nestedPort: kotlin.collections.List<Identified>? = null,
    val nestedReference: kotlin.collections.List<Identified>? = null,
    val nestedRendering: kotlin.collections.List<Identified>? = null,
    val nestedRequirement: kotlin.collections.List<Identified>? = null,
    val nestedState: kotlin.collections.List<Identified>? = null,
    val nestedTransition: kotlin.collections.List<Identified>? = null,
    val nestedUsage: kotlin.collections.List<Identified>? = null,
    val nestedUseCase: kotlin.collections.List<Identified>? = null,
    val nestedVerificationCase: kotlin.collections.List<Identified>? = null,
    val nestedView: kotlin.collections.List<Identified>? = null,
    val nestedViewpoint: kotlin.collections.List<Identified>? = null,
    val occurrenceDefinition: kotlin.collections.List<Identified>? = null,
    val owningDefinition: ActionUsageRequestAnyOfMultiplicity? = null,
    val owningUsage: ActionUsageRequestAnyOfMultiplicity? = null,
    val partDefinition: kotlin.collections.List<Identified>? = null,
    val portionKind: AssertConstraintUsageRequestAnyOfPortionKind? = null,
    val usage: kotlin.collections.List<Identified>? = null,
    val variant: kotlin.collections.List<Identified>? = null,
    val variantMembership: kotlin.collections.List<Identified>? = null,
    val function: Identified? = null,
    val isModelLevelEvaluable: kotlin.Boolean? = null,
    val result: Identified? = null,
    val referencedElement: Identified? = null,
    val referent: Identified? = null,
    val `value`: kotlin.Boolean? = null,
    val argument: kotlin.collections.List<Identified>? = null,
    val `operator`: kotlin.String? = null,
    val kind: TriggerKindRequest? = null,
    val predicate: Identified? = null,
    val isNegated: kotlin.Boolean? = null,
    val assertedConstraint: Identified? = null,
    val constraintDefinition: Identified? = null,
    val actorParameter: kotlin.collections.List<Identified>? = null,
    val assumedConstraint: kotlin.collections.List<Identified>? = null,
    val framedConcern: kotlin.collections.List<Identified>? = null,
    val reqId: kotlin.String? = null,
    val requiredConstraint: kotlin.collections.List<Identified>? = null,
    val requirementDefinition: Identified? = null,
    val satisfiedRequirement: Identified? = null,
    val satisfyingFeature: Identified? = null,
    val stakeholderParameter: kotlin.collections.List<Identified>? = null,
    val subjectParameter: Identified? = null,
    val text: kotlin.collections.List<kotlin.String>? = null,
    val concernDefinition: Identified? = null,
    val viewpointDefinition: Identified? = null,
    val viewpointStakeholder: kotlin.collections.List<Identified>? = null,
    val calculationDefinition: Identified? = null,
    val caseDefinition: Identified? = null,
    val objectiveRequirement: Identified? = null,
    val verificationCaseDefinition: Identified? = null,
    val verifiedRequirement: kotlin.collections.List<Identified>? = null,
    val includedUseCase: kotlin.collections.List<Identified>? = null,
    val useCaseDefinition: Identified? = null,
    val eventOccurrence: Identified? = null,
    val performedAction: Identified? = null,
    val useCaseIncluded: Identified? = null,
    val analysisCaseDefinition: Identified? = null,
    val resultExpression: Identified? = null,
    val effectAction: kotlin.collections.List<Identified>? = null,
    val succession: Identified? = null,
    val triggerAction: kotlin.collections.List<Identified>? = null,
    val doAction: Identified? = null,
    val entryAction: Identified? = null,
    val exitAction: Identified? = null,
    val isParallel: kotlin.Boolean? = null,
    val stateDefinition: kotlin.collections.List<Identified>? = null,
    val exhibitedState: Identified? = null,
    val bodyAction: Identified? = null,
    val untilArgument: Identified? = null,
    val whileArgument: Identified? = null,
    val loopVariable: Identified? = null,
    val seqArgument: Identified? = null,
    val payloadArgument: Identified? = null,
    val receiverArgument: Identified? = null,
    val senderArgument: Identified? = null,
    val payloadParameter: Identified? = null,
    val elseAction: Identified? = null,
    val ifArgument: Identified? = null,
    val thenAction: Identified? = null,
    val targetArgument: Identified? = null,
    val valueExpression: Identified? = null
)
{
    /**
    *
    * Values: PerformActionUsage
    */
    enum class AtType(val value: kotlin.String){
        PerformActionUsage("PerformActionUsage");
    }
}

