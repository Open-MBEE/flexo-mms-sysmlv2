/**
* Systems Modeling API and Services
* REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
*
* The version of the OpenAPI document: 1.0
*
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
@file:UseSerializers(UUIDSerializer::class)

package org.openmbee.flexo.sysmlv2.models

import org.openmbee.flexo.sysmlv2.infrastructure.UUIDSerializer
import com.google.gson.annotations.SerializedName
import kotlinx.serialization.Serializable
import kotlinx.serialization.UseSerializers

import org.openmbee.flexo.sysmlv2.models.ActionDefinitionRequestAnyOfIsConjugated
import org.openmbee.flexo.sysmlv2.models.ActionUsageRequestAnyOfMultiplicity
import org.openmbee.flexo.sysmlv2.models.AnnotationRequest
import org.openmbee.flexo.sysmlv2.models.AssociationRequest
import org.openmbee.flexo.sysmlv2.models.ConjugationRequest
import org.openmbee.flexo.sysmlv2.models.ConnectorRequest
import org.openmbee.flexo.sysmlv2.models.DependencyRequest
import org.openmbee.flexo.sysmlv2.models.DifferencingRequest
import org.openmbee.flexo.sysmlv2.models.DisjoiningRequest
import org.openmbee.flexo.sysmlv2.models.FeatureChainingRequest
import org.openmbee.flexo.sysmlv2.models.FeatureDirectionKindRequest
import org.openmbee.flexo.sysmlv2.models.FeatureInvertingRequest
import org.openmbee.flexo.sysmlv2.models.FeaturingRequest
import org.openmbee.flexo.sysmlv2.models.Identified
import org.openmbee.flexo.sysmlv2.models.ImportRequest
import org.openmbee.flexo.sysmlv2.models.IntersectingRequest
import org.openmbee.flexo.sysmlv2.models.MembershipRequest
import org.openmbee.flexo.sysmlv2.models.PortionKindRequest
import org.openmbee.flexo.sysmlv2.models.RelationshipRequestAnyOf
import org.openmbee.flexo.sysmlv2.models.SpecializationRequest
import org.openmbee.flexo.sysmlv2.models.TransitionFeatureKindRequest
import org.openmbee.flexo.sysmlv2.models.UnioningRequest
import org.openmbee.flexo.sysmlv2.models.VisibilityKindRequest

/**
 *
 * @param atType
 * @param atId
 * @param aliasIds
 * @param declaredName
 * @param declaredShortName
 * @param documentation
 * @param elementId
 * @param isImplied
 * @param isImpliedIncluded
 * @param isLibraryElement
 * @param name
 * @param ownedAnnotation
 * @param ownedElement
 * @param ownedRelatedElement
 * @param ownedRelationship
 * @param owner
 * @param owningMembership
 * @param owningNamespace
 * @param owningRelatedElement
 * @param owningRelationship
 * @param qualifiedName
 * @param relatedElement
 * @param shortName
 * @param source
 * @param target
 * @param textualRepresentation
 * @param feature
 * @param type
 * @param featureOfType
 * @param featuringType
 * @param owningFeatureOfType
 * @param memberElement
 * @param memberElementId
 * @param memberName
 * @param memberShortName
 * @param membershipOwningNamespace
 * @param ownedMemberElement
 * @param ownedMemberElementId
 * @param ownedMemberFeature
 * @param ownedMemberName
 * @param ownedMemberShortName
 * @param owningType
 * @param visibility
 * @param ownedMemberParameter
 * @param ownedSubjectParameter
 * @param ownedStakeholderParameter
 * @param ownedActorParameter
 * @param ownedResultExpression
 * @param kind
 * @param ownedConstraint
 * @param referencedConstraint
 * @param ownedConcern
 * @param referencedConcern
 * @param ownedRequirement
 * @param verifiedRequirement
 * @param ownedObjectiveRequirement
 * @param action
 * @param transitionFeature
 * @param ownedRendering
 * @param referencedRendering
 * @param chainingFeature
 * @param featureChained
 * @param featureInverted
 * @param invertingFeature
 * @param owningFeature
 * @param conjugatedType
 * @param originalType
 * @param conjugatedPortDefinition
 * @param originalPortDefinition
 * @param intersectingType
 * @param typeIntersected
 * @param general
 * @param specific
 * @param owningClassifier
 * @param subclassifier
 * @param superclassifier
 * @param subsettedFeature
 * @param subsettingFeature
 * @param redefinedFeature
 * @param redefiningFeature
 * @param referencedFeature
 * @param referencingFeature
 * @param typedFeature
 * @param portDefinition
 * @param disjoiningType
 * @param typeDisjoined
 * @param typeUnioned
 * @param unioningType
 * @param differencingType
 * @param typeDifferenced
 * @param association
 * @param connectorEnd
 * @param directedFeature
 * @param direction
 * @param endFeature
 * @param endOwningType
 * @param featureMembership
 * @param featureTarget
 * @param importedMembership
 * @param inheritedFeature
 * @param inheritedMembership
 * @param input
 * @param isAbstract
 * @param isComposite
 * @param isConjugated
 * @param isDerived
 * @param isEnd
 * @param isOrdered
 * @param isPortion
 * @param isReadOnly
 * @param isSufficient
 * @param isUnique
 * @param member
 * @param membership
 * @param multiplicity
 * @param output
 * @param ownedConjugator
 * @param ownedDifferencing
 * @param ownedDisjoining
 * @param ownedEndFeature
 * @param ownedFeature
 * @param ownedFeatureChaining
 * @param ownedFeatureInverting
 * @param ownedFeatureMembership
 * @param ownedImport
 * @param ownedIntersecting
 * @param ownedMember
 * @param ownedMembership
 * @param ownedRedefinition
 * @param ownedReferenceSubsetting
 * @param ownedSpecialization
 * @param ownedSubsetting
 * @param ownedTypeFeaturing
 * @param ownedTyping
 * @param ownedUnioning
 * @param owningFeatureMembership
 * @param relatedFeature
 * @param sourceFeature
 * @param targetFeature
 * @param behavior
 * @param interaction
 * @param itemFeature
 * @param itemFlowEnd
 * @param itemType
 * @param parameter
 * @param sourceOutputFeature
 * @param targetInputFeature
 * @param effectStep
 * @param guardExpression
 * @param transitionStep
 * @param triggerStep
 * @param actionDefinition
 * @param connectionDefinition
 * @param definition
 * @param directedUsage
 * @param flowConnectionDefinition
 * @param individualDefinition
 * @param isIndividual
 * @param isReference
 * @param isVariation
 * @param itemDefinition
 * @param nestedAction
 * @param nestedAllocation
 * @param nestedAnalysisCase
 * @param nestedAttribute
 * @param nestedCalculation
 * @param nestedCase
 * @param nestedConcern
 * @param nestedConnection
 * @param nestedConstraint
 * @param nestedEnumeration
 * @param nestedFlow
 * @param nestedInterface
 * @param nestedItem
 * @param nestedMetadata
 * @param nestedOccurrence
 * @param nestedPart
 * @param nestedPort
 * @param nestedReference
 * @param nestedRendering
 * @param nestedRequirement
 * @param nestedState
 * @param nestedTransition
 * @param nestedUsage
 * @param nestedUseCase
 * @param nestedVerificationCase
 * @param nestedView
 * @param nestedViewpoint
 * @param occurrenceDefinition
 * @param owningDefinition
 * @param owningUsage
 * @param partDefinition
 * @param portionKind
 * @param usage
 * @param variant
 * @param variantMembership
 * @param allocationDefinition
 * @param interfaceDefinition
 * @param associationEnd
 * @param ownedSubclassification
 * @param relatedType
 * @param sourceType
 * @param targetType
 * @param step
 * @param connectionEnd
 * @param lifeClass
 * @param ownedAction
 * @param ownedAllocation
 * @param ownedAnalysisCase
 * @param ownedAttribute
 * @param ownedCalculation
 * @param ownedCase
 * @param ownedConnection
 * @param ownedEnumeration
 * @param ownedFlow
 * @param ownedInterface
 * @param ownedItem
 * @param ownedMetadata
 * @param ownedOccurrence
 * @param ownedPart
 * @param ownedPort
 * @param ownedReference
 * @param ownedState
 * @param ownedTransition
 * @param ownedUsage
 * @param ownedUseCase
 * @param ownedVerificationCase
 * @param ownedView
 * @param ownedViewpoint
 * @param allocation
 * @param interfaceEnd
 * @param condition
 * @param featureWithValue
 * @param isDefault
 * @param isInitial
 * @param `value`
 * @param ownedVariantUsage
 * @param importOwningNamespace
 * @param importedElement
 * @param isImportAll
 * @param isRecursive
 * @param importedNamespace
 * @param client
 * @param supplier
 * @param annotatedElement
 * @param annotatingElement
 * @param owningAnnotatedElement
 * @param owningAnnotatingElement
 */
@Serializable
data class RelationshipRequest(
    @SerializedName("@type")
    val atType: RelationshipRequest.AtType,
    @SerializedName("@id")
    val atId: java.util.UUID? = null,
    val aliasIds: kotlin.collections.List<kotlin.String>? = null,
    val declaredName: kotlin.String? = null,
    val declaredShortName: kotlin.String? = null,
    val documentation: kotlin.collections.List<Identified>? = null,
    val elementId: kotlin.String? = null,
    val isImplied: kotlin.Boolean? = null,
    val isImpliedIncluded: kotlin.Boolean? = null,
    val isLibraryElement: kotlin.Boolean? = null,
    val name: kotlin.String? = null,
    val ownedAnnotation: kotlin.collections.List<Identified>? = null,
    val ownedElement: kotlin.collections.List<Identified>? = null,
    val ownedRelatedElement: kotlin.collections.List<Identified>? = null,
    val ownedRelationship: kotlin.collections.List<Identified>? = null,
    val owner: Identified? = null,
    val owningMembership: Identified? = null,
    val owningNamespace: Identified? = null,
    val owningRelatedElement: Identified? = null,
    val owningRelationship: Identified? = null,
    val qualifiedName: kotlin.String? = null,
    val relatedElement: kotlin.collections.List<Identified>? = null,
    val shortName: kotlin.String? = null,
    val source: kotlin.collections.List<Identified>? = null,
    val target: kotlin.collections.List<Identified>? = null,
    val textualRepresentation: kotlin.collections.List<Identified>? = null,
    val feature: Identified? = null,
    val type: Identified? = null,
    val featureOfType: Identified? = null,
    val featuringType: kotlin.collections.List<Identified>? = null,
    val owningFeatureOfType: Identified? = null,
    val memberElement: Identified? = null,
    val memberElementId: kotlin.String? = null,
    val memberName: kotlin.String? = null,
    val memberShortName: kotlin.String? = null,
    val membershipOwningNamespace: Identified? = null,
    val ownedMemberElement: Identified? = null,
    val ownedMemberElementId: kotlin.String? = null,
    val ownedMemberFeature: Identified? = null,
    val ownedMemberName: kotlin.String? = null,
    val ownedMemberShortName: kotlin.String? = null,
    val owningType: Identified? = null,
    val visibility: VisibilityKindRequest? = null,
    val ownedMemberParameter: Identified? = null,
    val ownedSubjectParameter: Identified? = null,
    val ownedStakeholderParameter: Identified? = null,
    val ownedActorParameter: Identified? = null,
    val ownedResultExpression: Identified? = null,
    val kind: TransitionFeatureKindRequest? = null,
    val ownedConstraint: Identified? = null,
    val referencedConstraint: Identified? = null,
    val ownedConcern: Identified? = null,
    val referencedConcern: Identified? = null,
    val ownedRequirement: Identified? = null,
    val verifiedRequirement: Identified? = null,
    val ownedObjectiveRequirement: Identified? = null,
    val action: Identified? = null,
    val transitionFeature: Identified? = null,
    val ownedRendering: Identified? = null,
    val referencedRendering: Identified? = null,
    val chainingFeature: kotlin.collections.List<Identified>? = null,
    val featureChained: Identified? = null,
    val featureInverted: Identified? = null,
    val invertingFeature: Identified? = null,
    val owningFeature: Identified? = null,
    val conjugatedType: Identified? = null,
    val originalType: Identified? = null,
    val conjugatedPortDefinition: Identified? = null,
    val originalPortDefinition: Identified? = null,
    val intersectingType: kotlin.collections.List<Identified>? = null,
    val typeIntersected: Identified? = null,
    val general: Identified? = null,
    val specific: Identified? = null,
    val owningClassifier: Identified? = null,
    val subclassifier: Identified? = null,
    val superclassifier: Identified? = null,
    val subsettedFeature: Identified? = null,
    val subsettingFeature: Identified? = null,
    val redefinedFeature: Identified? = null,
    val redefiningFeature: Identified? = null,
    val referencedFeature: Identified? = null,
    val referencingFeature: Identified? = null,
    val typedFeature: Identified? = null,
    val portDefinition: Identified? = null,
    val disjoiningType: Identified? = null,
    val typeDisjoined: Identified? = null,
    val typeUnioned: Identified? = null,
    val unioningType: kotlin.collections.List<Identified>? = null,
    val differencingType: kotlin.collections.List<Identified>? = null,
    val typeDifferenced: Identified? = null,
    val association: kotlin.collections.List<Identified>? = null,
    val connectorEnd: kotlin.collections.List<Identified>? = null,
    val directedFeature: kotlin.collections.List<Identified>? = null,
    val direction: FeatureDirectionKindRequest? = null,
    val endFeature: kotlin.collections.List<Identified>? = null,
    val endOwningType: Identified? = null,
    val featureMembership: kotlin.collections.List<Identified>? = null,
    val featureTarget: Identified? = null,
    val importedMembership: Identified? = null,
    val inheritedFeature: kotlin.collections.List<Identified>? = null,
    val inheritedMembership: kotlin.collections.List<Identified>? = null,
    val input: kotlin.collections.List<Identified>? = null,
    val isAbstract: kotlin.Boolean? = null,
    val isComposite: kotlin.Boolean? = null,
    val isConjugated: kotlin.Boolean? = null,
    val isDerived: kotlin.Boolean? = null,
    val isEnd: kotlin.Boolean? = null,
    val isOrdered: kotlin.Boolean? = null,
    val isPortion: kotlin.Boolean? = null,
    val isReadOnly: kotlin.Boolean? = null,
    val isSufficient: kotlin.Boolean? = null,
    val isUnique: kotlin.Boolean? = null,
    val member: kotlin.collections.List<Identified>? = null,
    val membership: kotlin.collections.List<Identified>? = null,
    val multiplicity: Identified? = null,
    val output: kotlin.collections.List<Identified>? = null,
    val ownedConjugator: Identified? = null,
    val ownedDifferencing: kotlin.collections.List<Identified>? = null,
    val ownedDisjoining: kotlin.collections.List<Identified>? = null,
    val ownedEndFeature: kotlin.collections.List<Identified>? = null,
    val ownedFeature: kotlin.collections.List<Identified>? = null,
    val ownedFeatureChaining: kotlin.collections.List<Identified>? = null,
    val ownedFeatureInverting: kotlin.collections.List<Identified>? = null,
    val ownedFeatureMembership: kotlin.collections.List<Identified>? = null,
    val ownedImport: kotlin.collections.List<Identified>? = null,
    val ownedIntersecting: kotlin.collections.List<Identified>? = null,
    val ownedMember: kotlin.collections.List<Identified>? = null,
    val ownedMembership: kotlin.collections.List<Identified>? = null,
    val ownedRedefinition: kotlin.collections.List<Identified>? = null,
    val ownedReferenceSubsetting: Identified? = null,
    val ownedSpecialization: kotlin.collections.List<Identified>? = null,
    val ownedSubsetting: kotlin.collections.List<Identified>? = null,
    val ownedTypeFeaturing: kotlin.collections.List<Identified>? = null,
    val ownedTyping: kotlin.collections.List<Identified>? = null,
    val ownedUnioning: kotlin.collections.List<Identified>? = null,
    val owningFeatureMembership: Identified? = null,
    val relatedFeature: kotlin.collections.List<Identified>? = null,
    val sourceFeature: Identified? = null,
    val targetFeature: kotlin.collections.List<Identified>? = null,
    val behavior: kotlin.collections.List<Identified>? = null,
    val interaction: kotlin.collections.List<Identified>? = null,
    val itemFeature: Identified? = null,
    val itemFlowEnd: kotlin.collections.List<Identified>? = null,
    val itemType: kotlin.collections.List<Identified>? = null,
    val parameter: kotlin.collections.List<Identified>? = null,
    val sourceOutputFeature: ActionUsageRequestAnyOfMultiplicity? = null,
    val targetInputFeature: ActionUsageRequestAnyOfMultiplicity? = null,
    val effectStep: kotlin.collections.List<Identified>? = null,
    val guardExpression: kotlin.collections.List<Identified>? = null,
    val transitionStep: Identified? = null,
    val triggerStep: kotlin.collections.List<Identified>? = null,
    val actionDefinition: kotlin.collections.List<Identified>? = null,
    val connectionDefinition: kotlin.collections.List<Identified>? = null,
    val definition: kotlin.collections.List<Identified>? = null,
    val directedUsage: kotlin.collections.List<Identified>? = null,
    val flowConnectionDefinition: kotlin.collections.List<Identified>? = null,
    val individualDefinition: Identified? = null,
    val isIndividual: kotlin.Boolean? = null,
    val isReference: kotlin.Boolean? = null,
    val isVariation: kotlin.Boolean? = null,
    val itemDefinition: kotlin.collections.List<Identified>? = null,
    val nestedAction: kotlin.collections.List<Identified>? = null,
    val nestedAllocation: kotlin.collections.List<Identified>? = null,
    val nestedAnalysisCase: kotlin.collections.List<Identified>? = null,
    val nestedAttribute: kotlin.collections.List<Identified>? = null,
    val nestedCalculation: kotlin.collections.List<Identified>? = null,
    val nestedCase: kotlin.collections.List<Identified>? = null,
    val nestedConcern: kotlin.collections.List<Identified>? = null,
    val nestedConnection: kotlin.collections.List<Identified>? = null,
    val nestedConstraint: kotlin.collections.List<Identified>? = null,
    val nestedEnumeration: kotlin.collections.List<Identified>? = null,
    val nestedFlow: kotlin.collections.List<Identified>? = null,
    val nestedInterface: kotlin.collections.List<Identified>? = null,
    val nestedItem: kotlin.collections.List<Identified>? = null,
    val nestedMetadata: kotlin.collections.List<Identified>? = null,
    val nestedOccurrence: kotlin.collections.List<Identified>? = null,
    val nestedPart: kotlin.collections.List<Identified>? = null,
    val nestedPort: kotlin.collections.List<Identified>? = null,
    val nestedReference: kotlin.collections.List<Identified>? = null,
    val nestedRendering: kotlin.collections.List<Identified>? = null,
    val nestedRequirement: kotlin.collections.List<Identified>? = null,
    val nestedState: kotlin.collections.List<Identified>? = null,
    val nestedTransition: kotlin.collections.List<Identified>? = null,
    val nestedUsage: kotlin.collections.List<Identified>? = null,
    val nestedUseCase: kotlin.collections.List<Identified>? = null,
    val nestedVerificationCase: kotlin.collections.List<Identified>? = null,
    val nestedView: kotlin.collections.List<Identified>? = null,
    val nestedViewpoint: kotlin.collections.List<Identified>? = null,
    val occurrenceDefinition: kotlin.collections.List<Identified>? = null,
    val owningDefinition: Identified? = null,
    val owningUsage: Identified? = null,
    val partDefinition: kotlin.collections.List<Identified>? = null,
    val portionKind: PortionKindRequest? = null,
    val usage: kotlin.collections.List<Identified>? = null,
    val variant: kotlin.collections.List<Identified>? = null,
    val variantMembership: kotlin.collections.List<Identified>? = null,
    val allocationDefinition: kotlin.collections.List<Identified>? = null,
    val interfaceDefinition: kotlin.collections.List<Identified>? = null,
    val associationEnd: kotlin.collections.List<Identified>? = null,
    val ownedSubclassification: kotlin.collections.List<Identified>? = null,
    val relatedType: kotlin.collections.List<Identified>? = null,
    val sourceType: Identified? = null,
    val targetType: kotlin.collections.List<Identified>? = null,
    val step: kotlin.collections.List<Identified>? = null,
    val connectionEnd: kotlin.collections.List<Identified>? = null,
    val lifeClass: Identified? = null,
    val ownedAction: kotlin.collections.List<Identified>? = null,
    val ownedAllocation: kotlin.collections.List<Identified>? = null,
    val ownedAnalysisCase: kotlin.collections.List<Identified>? = null,
    val ownedAttribute: kotlin.collections.List<Identified>? = null,
    val ownedCalculation: kotlin.collections.List<Identified>? = null,
    val ownedCase: kotlin.collections.List<Identified>? = null,
    val ownedConnection: kotlin.collections.List<Identified>? = null,
    val ownedEnumeration: kotlin.collections.List<Identified>? = null,
    val ownedFlow: kotlin.collections.List<Identified>? = null,
    val ownedInterface: kotlin.collections.List<Identified>? = null,
    val ownedItem: kotlin.collections.List<Identified>? = null,
    val ownedMetadata: kotlin.collections.List<Identified>? = null,
    val ownedOccurrence: kotlin.collections.List<Identified>? = null,
    val ownedPart: kotlin.collections.List<Identified>? = null,
    val ownedPort: kotlin.collections.List<Identified>? = null,
    val ownedReference: kotlin.collections.List<Identified>? = null,
    val ownedState: kotlin.collections.List<Identified>? = null,
    val ownedTransition: kotlin.collections.List<Identified>? = null,
    val ownedUsage: kotlin.collections.List<Identified>? = null,
    val ownedUseCase: kotlin.collections.List<Identified>? = null,
    val ownedVerificationCase: kotlin.collections.List<Identified>? = null,
    val ownedView: kotlin.collections.List<Identified>? = null,
    val ownedViewpoint: kotlin.collections.List<Identified>? = null,
    val allocation: kotlin.collections.List<Identified>? = null,
    val interfaceEnd: kotlin.collections.List<Identified>? = null,
    val condition: Identified? = null,
    val featureWithValue: Identified? = null,
    val isDefault: kotlin.Boolean? = null,
    val isInitial: kotlin.Boolean? = null,
    val `value`: Identified? = null,
    val ownedVariantUsage: Identified? = null,
    val importOwningNamespace: Identified? = null,
    val importedElement: Identified? = null,
    val isImportAll: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val isRecursive: ActionDefinitionRequestAnyOfIsConjugated? = null,
    val importedNamespace: Identified? = null,
    val client: kotlin.collections.List<Identified>? = null,
    val supplier: kotlin.collections.List<Identified>? = null,
    val annotatedElement: Identified? = null,
    val annotatingElement: Identified? = null,
    val owningAnnotatedElement: Identified? = null,
    val owningAnnotatingElement: Identified? = null
)
{
    /**
    *
    * Values: Annotation
    */
    enum class AtType(val value: kotlin.String){
        Annotation("Annotation");
    }
}

